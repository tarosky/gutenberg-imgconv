name: CI

on:
  pull_request:
    branches:
    - master
  push:
    branches:
    - master
    - issue/*
    - dev/harai

env:
  AWS_ACCOUNT_ID: '013230744746'
  TEST_ACCESS_KEY_ID: AKIAQGFE5ESVOSITRJJK
  TEST_S3_SRC_BUCKET: gutenberg-ext-imgconv-tests3srcbucket-1nfmay8h6zit1
  TEST_S3_DEST_BUCKET: gutenberg-ext-imgconv-tests3destbucket-a6ao4v2r6ks5
  TEST_S3_ANOTHER_SRC_BUCKET: gutenberg-ext-imgconv-tests3anothersrcbucket-1lj3632c3dn19
  TEST_S3_ANOTHER_DEST_BUCKET: gutenberg-ext-imgconv-tests3anotherdestbucket-1xrab2bhory0u
  RELEASE_ACCESS_KEY_ID: AKIAQGFE5ESVD2ODKAC5
  REPO_BUCKET: gutenberg-ext-imgconv-repobucket-1bxd9jnafv4c5
  GO_VERSION: 1.16.10

jobs:
  build-go:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '~${{env.GO_VERSION}}'
    - run: echo "$TEST_ACCESS_KEY_ID" > config/test/access-key-id
    - run: echo "$AWS_ACCOUNT_ID" > config/test/aws-account-id
    - run: echo "$TEST_S3_SRC_BUCKET" > config/test/s3-src-bucket
    - run: echo "$TEST_S3_DEST_BUCKET" > config/test/s3-dest-bucket
    - run: echo "$TEST_S3_ANOTHER_SRC_BUCKET" > config/test/s3-another-src-bucket
    - run: echo "$TEST_S3_ANOTHER_DEST_BUCKET" > config/test/s3-another-dest-bucket
    - run: echo "$TEST_SECRET_ACCESS_KEY" > config/test/secret-access-key
      env:
        TEST_SECRET_ACCESS_KEY: ${{secrets.AWS_TEST_SECRET_ACCESS_KEY}}
    - run: sudo apt-get install -y gcc
    - run: go get github.com/ahmetb/govvv
    - name: Generate build number
      uses: einaregilsson/build-number@v3
      with:
        token: ${{secrets.GITHUB_TOKEN}}
        prefix: build_number_generator
    - name: Print new build number
      run: echo "Build number is $BUILD_NUMBER"
    - name: Save the build number
      run: echo "$BUILD_NUMBER" > work/BUILD_NUMBER
    - name: Embed build number into code
      run: echo "build-$BUILD_NUMBER" > ./VERSION
    - run: ~/go/bin/govvv build -pkg github.com/tarosky/gutenberg-imgconv/imgconv -o work/imgconv lambda/lambda.go
      env:
        GOOS: linux
    - uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: work/imgconv
    - uses: actions/upload-artifact@v2
      with:
        name: build-number
        path: work/BUILD_NUMBER

  build-uglifyjs:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - run: uglifyjs/build-image
    - run: uglifyjs/run-nexe
    - uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: work/uglifyjs

  test:
    needs: build-uglifyjs
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: work
    - run: chmod +x work/uglifyjs
    - uses: actions/setup-go@v2
      with:
        go-version: '~${{env.GO_VERSION}}'
    - run: echo "$TEST_ACCESS_KEY_ID" > config/test/access-key-id
    - run: echo "$AWS_ACCOUNT_ID" > config/test/aws-account-id
    - run: echo "$TEST_S3_SRC_BUCKET" > config/test/s3-src-bucket
    - run: echo "$TEST_S3_DEST_BUCKET" > config/test/s3-dest-bucket
    - run: echo "$TEST_S3_ANOTHER_SRC_BUCKET" > config/test/s3-another-src-bucket
    - run: echo "$TEST_S3_ANOTHER_DEST_BUCKET" > config/test/s3-another-dest-bucket
    - run: echo "$TEST_SECRET_ACCESS_KEY" > config/test/secret-access-key
      env:
        TEST_SECRET_ACCESS_KEY: ${{secrets.AWS_TEST_SECRET_ACCESS_KEY}}
    - run: go get -u github.com/jstemmer/go-junit-report
    - run: go test -v ./imgconv 2>&1 | tee work/test.log
    - run: go-junit-report < work/test.log > work/report.xml
    - uses: actions/upload-artifact@v2
      with:
        name: report.xml
        path: work/report.xml
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        files: work/report.xml

  bundle:
    needs:
    - build-go
    - build-uglifyjs
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
    - run: chmod +x imgconv uglifyjs
    - run: zip -j imgconv.zip ./imgconv ./uglifyjs
    - uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: imgconv.zip

  release:
    needs:
    - bundle
    - test
    # if: github.ref == 'refs/heads/master'
    if: github.ref == 'refs/heads/dev/harai'
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
    - uses: actions/download-artifact@v2
      with:
        name: build-number
    - name: set BUILD_NUMBER
      run: echo "BUILD_NUMBER=$(< ./BUILD_NUMBER)" >> $GITHUB_ENV
    - id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: build-${{env.BUILD_NUMBER}}
        release_name: Build ${{env.BUILD_NUMBER}}
        draft: false
        prerelease: false
    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./imgconv.zip
        asset_name: imgconv.build-${{env.BUILD_NUMBER}}-awslambda-go1x.zip
        asset_content_type: application/octet-stream
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{env.RELEASE_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_RELEASE_SECRET_ACCESS_KEY}}
        aws-region: ap-northeast-1
    - run: aws s3 cp ./imgconv.zip s3://$REPO_BUCKET/imgconv.build-${{env.BUILD_NUMBER}}-awslambda-go1x.zip
